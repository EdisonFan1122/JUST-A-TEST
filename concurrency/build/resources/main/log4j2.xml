<?xml version="1.0" encoding="UTF-8" ?>

<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval
    : Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数,30s刷新此配置。 注：本配置文件的目标是将不同级别的日志输出到不同文件，可以设置成OFF(关闭) 或 Error(只输出错误信息)。最大2MB一个文件，
    文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<Configuration status="Error" monitorInterval="60">

    <Properties>
        <!-- 配置日志文件输出目录，此配置将日志输出到tomcat根目录下的指定文件夹 -->
        <!--<Property name="LOG_HOME">${sys:catalina.home}/WebAppLogs/HHServices-->
        <Property name="LOG_HOME">D:/log4j2/springboot</Property>
        <Property name="LOG_GZ_HOME">D:/log4j2/springboot/gz</Property>
        <Property name="LOG_PATTERN">%5p [%t] %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n</Property>
    </Properties>

    <Appenders>

        <!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
        <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
        <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
        <!--输出日志的格式
         %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
         %p : 日志输出格式
         %c : logger的名称
         %m : 日志内容，即 logger.info("message")
         %n : 换行符
         %C : Java类名
         %L : 日志输出所在行数
         %M : 日志输出所在方法名
         hostName : 本地机器名
         hostAddress : 本地ip地址 -->

        <!--这个输出控制台的配置，这里输出除了warn和error级别的信息到System.out -->
        <Console name="console_appender" target="SYSTEM_OUT">
            <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) . -->
            <ThresholdFilter level="DEBUG" onMatch="ACCEPT"
                             onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>

        <!-- INFO级别日志 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，
            打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="info_appender" immediateFlush="true"
                     fileName="${LOG_HOME}/info.log"
                     filePattern="${LOG_GZ_HOME}/$${date:yyyy-MM}/%d{yyyy-MM-dd HH}-%i.info.gz">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!-- 每个日志文件最大2MB-->
                <SizeBasedTriggeringPolicy size="2MB"/>
            </Policies>
            <Filters>
                <!-- 此Filter意思是，只输出ERROR级别的数据 -->
                <!-- 只记录info和warn级别信息 -->
                <ThresholdFilter level="error" onMatch="DENY"
                                 onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT"
                                 onMismatch="DENY"/>
            </Filters>

            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="50"/>
        </RollingFile>

        <!-- ERROR级别日志 -->
        <RollingFile name="error_appender" immediateFlush="true"
                     fileName="${LOG_HOME}/error.log"
                     filePattern="${LOG_GZ_HOME}$${date:yyyy-MM}/%d{yyyy-MM-dd HH}-%i.error.gz">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="2MB"/>
            </Policies>
            <Filters>
                <!-- 只记录error级别信息 -->
                <ThresholdFilter level="error" onMatch="ACCEPT"
                                 onMismatch="DENY"/>
            </Filters>
            <DefaultRolloverStrategy max="50"/>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!-- 配置日志的根节点 -->
        <!-- 定义logger，只有定义了logger并引入了appender，appender才会生效 -->
        <!-- Mixed sync/async -->
        <root level="debug">
            <appender-ref ref="console_appender"/>
            <appender-ref ref="info_appender"/>
            <appender-ref ref="error_appender"/>
        </root>

        <AsyncRoot level="debug" includeLocation="true">
            <appender-ref ref="console_appender"/>
            <appender-ref ref="info_appender"/>
            <appender-ref ref="error_appender"/>
        </AsyncRoot>

        <!-- 第三方日志系统 -->
        <!--<logger name="org.springframework.core" level="info"/>-->
        <!--<logger name="org.springframework.beans" level="info"/>-->
        <!--<logger name="org.springframework.context" level="info"/>-->
        <!--<logger name="org.springframework.web" level="info"/>-->
        <!--<logger name="org.jboss.netty" level="warn"/>-->
        <!--<logger name="org.apache.http" level="warn"/>-->
    </Loggers>

</Configuration>